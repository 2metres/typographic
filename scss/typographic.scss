// Typographic v2.5.0 - https://github.com/corysimmons/typographic


// Ratios

$minor-second   : 1.067;
$major-second   : 1.125;
$minor-third    : 1.2;
$major-third    : 1.25;
$perfect-fourth : 1.333;
$aug-fourth     : 1.414;
$perfect-fifth  : 1.5;
$minor-sixth    : 1.6;
$golden         : 1.618;
$major-sixth    : 1.667;
$minor-seventh  : 1.778;
$major-seventh  : 1.875;
$octave         : 2;
$major-tenth    : 2.5;
$major-eleventh : 2.667;
$major-twelfth  : 3;
$double-octave  : 4;


// Sans-serif

$calibri       : 'Calibri', 'Candara', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif';
$candara       : 'Candara', 'Calibri', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif';
$courier       : 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace';
$franklin      : 'Franklin Gothic Medium', 'Arial', 'sans-serif';
$futura        : 'Futura', 'Trebuchet MS', 'Arial', 'sans-serif';
$geneva        : 'Geneva', 'Tahoma', 'Verdana', 'sans-serif';
$gill-sans     : 'Gill Sans', 'Gill Sans MT', 'Calibri', 'sans-serif';
$helvetica     : 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';
$lucida-grande : 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Geneva', 'Verdana', 'sans-serif';
$optima        : 'Optima', 'Segoe', 'Segoe UI', 'Candara', 'Calibri', 'Arial', 'sans-serif';
$segoe         : 'Segoe', 'Segoe UI', 'Helvetica Neue', 'Arial', 'sans-serif';
$tahoma        : 'Tahoma', 'Geneva', 'Verdana', 'sans-serif';
$trebuchet     : 'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Tahoma', 'sans-serif';
$verdana       : 'Verdana', 'Geneva', 'sans-serif';


// Serif

$antiqua       : 'Book Antiqua', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif';
$baskerville   : 'Baskerville', 'Baskerville old face', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';
$bodoni        : 'Bodoni MT', 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';
$cambria       : 'Cambria', 'Georgia', 'serif';
$caslon        : 'Big Caslon', 'Book Antiqua', 'Palatino Linotype', 'Georgia', 'serif';
$constantia    : 'Constantia', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif';
$didot         : 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif';
$garamond      : 'Garamond', 'Baskerville', 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', 'serif';
$goudy         : 'Goudy Old Style', 'Garamond', 'Big Caslon', 'Times New Roman', 'serif';
$hoefler       : 'Hoefler Text', 'Baskerville old face', 'Garamond', 'Times New Roman', 'serif';
$lucida-bright : 'Lucida Bright', 'Georgia', 'serif';
$palatino      : 'Palatino', 'Palatino Linotype', 'Palatino LT STD', "Book Antiqua", 'Georgia', 'serif';


// Settings

$line-height-ratio  : 1.75 !default;
$header-ratio       : $golden !default;
$body-font          : $helvetica !default;
$body-font-weight   : 300 !default;
$body-color         : #666 !default;
$header-font        : $helvetica !default;
$header-font-weight : 500 !default;
$header-color       : #111 !default;
$min-font           : 12px !default;
$max-font           : 20px !default;
$min-width          : 600px !default;
$max-width          : 1000px !default;


// Helpers

@function _strip-units($number) {
  @return $number / ($number * 0 + 1);
}

@function vr-block($n: 1, $px-offset: false) {
  @if($px-offset) {
    @return ( (($line-height-ratio * _strip-units($max-font)) / (_strip-units($max-font) / 2)) * ($n / 2) * (1 + ($px-offset / _strip-units($max-font))) ) + em;
  } @else {
    @return ( (($line-height-ratio * _strip-units($max-font)) / (_strip-units($max-font) / 2)) * ($n / 2) ) + em;
  }
}

@mixin grid-overlay($color: black, $px-offset: false) {
  body {
    background: linear-gradient(to top, rgba($color, .1) 5%, white 5%);
    background-size: 100% ($line-height-ratio) + em;
    @if($px-offset) {
      background-position: 0 $px-offset + px;
    }
  }
}


// Private Decimal Exponent Function

@function math-pow($number, $exp) {
    @if (round($exp) != $exp) {
      @return math-exp($exp * math-ln($number));
    }

    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
           $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}

@function math-factorial($value) {
  @if $value == 0 {
    @return 1;
  }

  $result: 1;

  @for $index from 1 through $value {
    $result: $result * $index;
  }

  @return $result;
}

@function math-summation($iteratee, $input, $initial: 0, $limit: 100) {
  $sum: 0;

  @for $index from $initial to $limit {
    $sum: $sum + call($iteratee, $input, $index);
  }

  @return $sum;
}

@function math-exp-maclaurin($x, $n) {
  $result: math-pow($x, $n) / math-factorial($n);
  @return $result;
}
@function math-exp($value) {
  $result: math-summation(math-exp-maclaurin, $value, 0, 100);
  @return $result;
}

@function math-ln-maclaurin($x, $n) {
  $result: (math-pow(-1, $n + 1) / $n) * (math-pow($x - 1, $n));
  @return $result;
}
@function math-ln($value) {
  $ten-exp: 1;
  $ln-ten: 2.30258509;

  @while ($value > math-pow(10, $ten-exp)) {
    $ten-exp: $ten-exp + 1;
  }

  $value: $value / math-pow(10, $ten-exp);

  $result: math-summation(math-ln-maclaurin, $value, 1, 100);

  @return $result + $ten-exp * $ln-ten;
}


// Typography Reset

@mixin typographic() {

  html {

    font-family: $body-font;
    font-weight: $body-font-weight;
    color: $body-color;

    font-size: $min-font;
    line-height: #{$line-height-ratio}em;

    @media (min-width: $min-width) {
      font-size: calc( #{$min-font} + (#{_strip-units($max-font)} - #{_strip-units($min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );
    }

    @media (min-width: $max-width) {
      font-size: $max-font;
    }

  }


  // Reset

  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
  a, abbr, acronym, address, big, cite, code,
  del, dfn, em, img, ins, kbd, q, s, samp,
  small, strike, strong, sub, sup, tt, var,
  b, u, i, center,
  dl, dt, dd, ol, ul, li,
  fieldset, form, label, legend,
  table, caption, tbody, tfoot, thead, tr, th, td {
    margin: 0;
    padding: 0;
  }

  p, blockquote, pre,
  address,
  dl, ol, ul,
  form,
  table {
    margin-bottom: #{$line-height-ratio}em;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: $header-font;
    font-weight: $header-font-weight;
    color: $header-color;
    margin-bottom: 0;
    clear: both;
  }

  h1 {
    $local-min-font: $min-font * (math-pow($header-ratio, 1.75));
    $local-max-font: $max-font * (math-pow($header-ratio, 1.75));

    font-size: $local-min-font;
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25)) + em;

    @media (min-width: $min-width) {
      font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25)) + em;
    }
  }

  h2 {
    $local-min-font: $min-font * (math-pow($header-ratio, 1.4));
    $local-max-font: $max-font * (math-pow($header-ratio, 1.4));

    font-size: $local-min-font;
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;

    @media (min-width: $min-width) {
      font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
      margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;
    }
  }

  h3 {
    $local-min-font: $min-font * (math-pow($header-ratio, 1.05));
    $local-max-font: $max-font * (math-pow($header-ratio, 1.05));

    font-size: $local-min-font;
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;

    @media (min-width: $min-width) {
      font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
      margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;
    }
  }

  h4 {
    $local-min-font: $min-font * (math-pow($header-ratio, .7));
    $local-max-font: $max-font * (math-pow($header-ratio, .7));

    font-size: $local-min-font;
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (3 / _strip-units($local-min-font)))) + em;

    @media (min-width: $min-width) {
      font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
      margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (3 / _strip-units($local-max-font)))) + em;
    }
  }

  h5 {
    $local-min-font: $min-font * (math-pow($header-ratio, .35));
    $local-max-font: $max-font * (math-pow($header-ratio, .35));

    font-size: $local-min-font;
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25)) + em;

    @media (min-width: $min-width) {
      font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25)) + em;
    }
  }

  h6 {
    $local-min-font: $min-font;
    $local-max-font: $max-font;

    font-size: $local-min-font;
    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25)) + em;
    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5)) + em;
    margin-bottom: (($line-height-ratio * _strip-units($min-font)) / (_strip-units($local-min-font) / .25) * (1 + (2 / _strip-units($local-min-font)))) + em;

    @media (min-width: $min-width) {
      font-size: calc( #{$local-min-font} + (#{_strip-units($local-max-font)} - #{_strip-units($local-min-font)}) * ((100vw - #{$min-width}) / (#{_strip-units($max-width)} - #{_strip-units($min-width)})) );
    }

    @media (min-width: $max-width) {
      font-size: $local-max-font;
      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25)) + em;
      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5)) + em;
      margin-bottom: (($line-height-ratio * _strip-units($max-font)) / (_strip-units($local-max-font) / .25) * (1 + (2 / _strip-units($local-max-font)))) + em;
    }
  }

  blockquote {
    font-style: italic;
    padding-left: #{$line-height-ratio}em;
    border-left: 5px solid darken(white, 7%);
    cite {
      display: block;
      font-style: normal;
    }
  }

  pre {
    padding: ($line-height-ratio * .5) + em;
    background: darken(white, 2%);
    border: 1px solid darken(white, 7%);
    margin-bottom: vr-block(1, -2.5);
    code {
      background: none;
      padding: 0;
      border: 0;
    }
  }

  a {
    color: dodgerblue;
    &:visited {
      color: darken(dodgerblue, 10%);
    }
  }

  code {
    font-family: $courier;
    padding: ($line-height-ratio * .05) + em ($line-height-ratio * .15) + em;
    background: darken(white, 2%);
    line-height: 0;
    border: 1px solid darken(white, 7%);
  }

  big, sub, sup {
    line-height: 0;
  }

  abbr, acronym {
    border-bottom: 1px dotted #333;
    cursor: help;
  }

  address {
    font-style: normal;
  }

  dt {
    color: $header-color;
    font-weight: bold;
  }

  ul {
    padding-left: 1.1em;
  }

  ol {
    padding-left: 1.4em;
  }

  fieldset {
    padding: ($line-height-ratio * .5) + em ($line-height-ratio) + em ($line-height-ratio) + em;
    border: 1px solid darken(white, 7%);
  }

  legend {
    color: $header-color;
    font-weight: bold;
  }

  label {
    display: block;
    margin-bottom: ($line-height-ratio * .5) + em;
  }

  input[type="text"], textarea {
    padding: ($line-height-ratio * .5) + em;
    border: 1px solid darken(white, 7%);
  }

  table {
    width: 100%;
    border-spacing: 0;
    border-collapse: collapse;
  }

  th {
    padding: ($line-height-ratio * .5) + em;
    text-align: left;
    color: $header-color;
    border: 1px solid darken(white, 7%);
  }

  tr {
    &:nth-child(odd) {
      td {
        background: darken(white, 3%);
      }
    }
  }

  td {
    padding: ($line-height-ratio * .5) + em;
    border: 1px solid darken(white, 7%);
  }

}
